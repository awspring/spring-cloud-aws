<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.awspring.cloud</groupId>
		<artifactId>spring-cloud-aws</artifactId>
		<version>3.0.5</version>
	</parent>
	<artifactId>spring-cloud-aws-docs</artifactId>
	<packaging>pom</packaging>
	<name>Spring Cloud AWS Docs</name>
	<properties>
		<docs.main>spring-cloud-aws</docs.main>
		<main.basedir>${basedir}/..</main.basedir>
		<configprops.inclusionPattern>spring.cloud.aws.*</configprops.inclusionPattern>
		<upload-docs-zip.phase>deploy</upload-docs-zip.phase>
		<generated-docs-multipage-output.dir>${project.build.directory}/generated-docs/${project.version}/reference/html</generated-docs-multipage-output.dir>
		<generated-docs-singlepage-output.dir>${project.build.directory}/generated-docs/${project.version}/reference/htmlsingle</generated-docs-singlepage-output.dir>
		<generated-docs-pdf-output.dir>${project.build.directory}/generated-docs/${project.version}/reference/pdf</generated-docs-pdf-output.dir>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>io.awspring.cloud</groupId>
			<artifactId>spring-cloud-aws-autoconfigure</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>docs-classic</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${maven-dependency-plugin.version}</version>
							<executions>
								<execution>
									<id>unpack-docs</id>
									<phase>${maven-dependency-plugin-for-docs.phase}</phase>
									<goals>
										<goal>unpack</goal>
									</goals>
									<configuration>
										<artifactItems>
											<artifactItem>
												<groupId>org.springframework.cloud
												</groupId>
												<artifactId>spring-cloud-build-docs
												</artifactId>
												<version>${spring-cloud-build.version}
												</version>
												<classifier>sources</classifier>
												<type>jar</type>
												<overWrite>true</overWrite>
												<outputDirectory>${docs.resources.dir}
												</outputDirectory>
											</artifactItem>
										</artifactItems>
									</configuration>
								</execution>
								<execution>
									<id>unpack-classes</id>
									<phase>${maven-dependency-plugin-for-docs-classes.phase}</phase>
									<goals>
										<goal>unpack</goal>
									</goals>
									<configuration>
										<artifactItems>
											<artifactItem>
												<groupId>org.springframework.cloud
												</groupId>
												<artifactId>spring-cloud-build-docs
												</artifactId>
												<version>${spring-cloud-build.version}
												</version>
												<classifier>jar-with-dependencies</classifier>
												<type>jar</type>
												<overWrite>true</overWrite>
												<outputDirectory>${docs.classes.dir}
												</outputDirectory>
											</artifactItem>
										</artifactItems>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-asciidoc-resources</id>
									<phase>generate-resources</phase>
									<goals>
										<goal>copy-resources</goal>
									</goals>
									<configuration>
										<outputDirectory>${project.build.directory}/refdocs/</outputDirectory>
										<resources>
											<resource>
												<directory>src/main/asciidoc</directory>
												<excludes>
													<exclude>ghpages.sh</exclude>
												</excludes>
											</resource>
										</resources>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>exec-maven-plugin</artifactId>
							<version>${exec-maven-plugin.version}</version>
							<executions>
								<execution>
									<id>generate-configprops</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>java</goal>
									</goals>
								</execution>
							</executions>
							<dependencies>
								<dependency>
									<groupId>org.springframework.cloud
									</groupId>
									<artifactId>spring-cloud-build-docs
									</artifactId>
									<version>${spring-cloud-build.version}
									</version>
									<classifier>${spring-cloud-build-docs-classifier}</classifier>
									<type>jar</type>
								</dependency>
							</dependencies>
							<configuration>
								<includePluginDependencies>
									true
								</includePluginDependencies>
								<mainClass>org.springframework.cloud.internal.Main</mainClass>
								<arguments>
									<argument>${configprops.path}</argument>
									<argument>${configprops.inclusionPattern}</argument>
								</arguments>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctor-maven-plugin</artifactId>
							<version>${asciidoctor-maven-plugin.version}</version>
							<dependencies>
								<dependency>
									<groupId>io.spring.asciidoctor.backends</groupId>
									<artifactId>spring-asciidoctor-backends</artifactId>
									<version>${spring-asciidoctor-backends.version}</version>
								</dependency>
								<dependency>
									<groupId>org.asciidoctor</groupId>
									<artifactId>asciidoctorj-pdf</artifactId>
									<version>${asciidoctorj-pdf.version}</version>
								</dependency>
								<dependency>
									<groupId>org.asciidoctor</groupId>
									<artifactId>asciidoctorj-diagram</artifactId>
									<version>${asciidoctorj-diagram.version}</version>
								</dependency>
							</dependencies>
							<configuration>
								<sourceDirectory>${refdocs.build.directory}</sourceDirectory>
								<resources>
									<resource>
										<directory>${refdocs.build.directory}</directory>
										<excludes>
											<exclude>**/*.*adoc</exclude>
										</excludes>
									</resource>
								</resources>
								<!-- tag::attributes[] -->
								<attributes>
									<docinfo>shared</docinfo>
									<allow-uri-read>true</allow-uri-read>
									<nofooter/>
									<toc>left</toc>
									<toc-levels>4</toc-levels>
									<sectlinks>true</sectlinks>
									<sources-root>${project.basedir}/src@</sources-root>
									<asciidoc-sources-root>${project.basedir}/src/main/asciidoc@</asciidoc-sources-root>
									<generated-resources-root>${project.basedir}/target/generated-resources@
									</generated-resources-root>
									<!-- Use this attribute the reference code from another module -->
									<!-- Note the @ at the end, lowering the precedence of the attribute -->
									<project-root>${maven.multiModuleProjectDirectory}@</project-root>
									<!-- It's mandatory for you to pass the docs.main property -->
									<github-repo>${docs.main}@</github-repo>
									<github-project>https://github.com/spring-cloud/${docs.main}@</github-project>
									<github-raw>
										https://raw.githubusercontent.com/spring-cloud/${docs.main}/${github-tag}@
									</github-raw>
									<github-code>https://github.com/spring-cloud/${docs.main}/tree/${github-tag}@
									</github-code>
									<github-issues>https://github.com/spring-cloud/${docs.main}/issues/@</github-issues>
									<github-wiki>https://github.com/spring-cloud/${docs.main}/wiki@</github-wiki>
									<github-master-code>https://github.com/spring-cloud/${docs.main}/tree/master@
									</github-master-code>
									<index-link>${index-link}@</index-link>

									<!-- Spring Cloud specific -->
									<!-- for backward compatibility -->
									<spring-cloud-version>${project.version}@</spring-cloud-version>
									<project-version>${project.version}@</project-version>
									<github-tag>${github-tag}@</github-tag>
									<version-type>${version-type}@</version-type>
									<docs-url>https://docs.spring.io/${docs.main}/docs/${project.version}@</docs-url>
									<raw-docs-url>${github-raw}@</raw-docs-url>
									<project-version>${project.version}@</project-version>
									<project-name>${docs.main}@</project-name>
									<source-highlighter>highlight.js</source-highlighter>
								</attributes>
								<!-- end::attributes[] -->
								<requires>
									<require>asciidoctor-diagram</require>
								</requires>
							</configuration>
							<executions>
								<execution>
									<id>generate-html-documentation</id>
									<phase>${generate-docs.phase}</phase>
									<goals>
										<goal>process-asciidoc</goal>
									</goals>
									<configuration>
										<backend>spring-html</backend>
										<sourceDocumentExtensions>
											<sourceDocumentExtension>.adoc</sourceDocumentExtension>
											<sourceDocumentExtension>.htmladoc</sourceDocumentExtension>
										</sourceDocumentExtensions>
										<outputDirectory>${generated-docs-multipage-output.dir}
										</outputDirectory>
										<doctype>book</doctype>
										<attributes>
											<docinfo>shared</docinfo>
											<stylesdir>css/</stylesdir>
											<stylesheet>site.css</stylesheet>
											<linkcss>true</linkcss>
											<icons>font</icons>
											<highlightjsdir>js/highlight</highlightjsdir>
											<highlightjs-theme>github</highlightjs-theme>
											<imagesdir>./images</imagesdir>
											<attribute-missing>warn</attribute-missing>
											<source-highlighter>highlight.js</source-highlighter>
										</attributes>
										<logHandler>
											<outputToConsole>true</outputToConsole>
											<failIf>
												<!--												<severity>DEBUG</severity>-->
											</failIf>
										</logHandler>
									</configuration>
								</execution>
								<execution>
									<id>generate-htmlsingle-documentation</id>
									<phase>${generate-docs.phase}</phase>
									<goals>
										<goal>process-asciidoc</goal>
									</goals>
									<configuration>
										<backend>spring-html</backend>
										<sourceDocumentExtensions>
											<sourceDocumentExtension>.htmlsingleadoc</sourceDocumentExtension>
										</sourceDocumentExtensions>
										<outputDirectory>
											${generated-docs-singlepage-output.dir}
										</outputDirectory>
										<doctype>book</doctype>
										<attributes>
											<source-highlighter>highlight.js</source-highlighter>
											<docinfo>shared</docinfo>
											<stylesdir>css/</stylesdir>
											<stylesheet>site.css</stylesheet>
											<linkcss>true</linkcss>
											<icons>font</icons>
											<highlightjsdir>js/highlight</highlightjsdir>
											<highlightjs-theme>github</highlightjs-theme>
											<imagesdir>./images</imagesdir>
										</attributes>
									</configuration>
								</execution>
								<execution>
									<id>generate-pdf-documentation</id>
									<phase>${generate-docs.phase}</phase>
									<goals>
										<goal>process-asciidoc</goal>
									</goals>
									<configuration>
										<backend>pdf</backend>
										<sourceDocumentExtensions>
											<sourceDocumentExtension>.pdfadoc</sourceDocumentExtension>
										</sourceDocumentExtensions>
										<outputDirectory>${generated-docs-pdf-output.dir}
										</outputDirectory>
										<resources>
											<resource>
												<directory>${refdocs.build.directory}</directory>
												<excludes>
													<exclude>**/*</exclude>
												</excludes>
											</resource>
										</resources>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<version>${maven-antrun-plugin.version}</version>
							<dependencies>
								<dependency>
									<groupId>ant-contrib</groupId>
									<artifactId>ant-contrib</artifactId>
									<version>1.0b3</version>
									<exclusions>
										<exclusion>
											<groupId>ant</groupId>
											<artifactId>ant</artifactId>
										</exclusion>
									</exclusions>
								</dependency>
								<dependency>
									<groupId>org.apache.ant</groupId>
									<artifactId>ant-nodeps</artifactId>
									<version>${ant-nodeps.version}</version>
								</dependency>
								<dependency>
									<groupId>org.tigris.antelope</groupId>
									<artifactId>antelopetasks</artifactId>
									<version>${antelopetasks.version}</version>
								</dependency>
								<dependency>
									<groupId>org.jruby</groupId>
									<artifactId>jruby-complete</artifactId>
									<version>${jruby-complete.version}</version>
								</dependency>
								<dependency>
									<groupId>org.asciidoctor</groupId>
									<artifactId>asciidoctorj</artifactId>
									<version>${asciidoctorj.version}</version>
								</dependency>
							</dependencies>
							<executions>
								<execution>
									<id>readme</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<path id="readme.class.path">
												<pathelement location="${readme.main.classpath}"/>
											</path>
											<java classname="org.springframework.cloud.internal.asciidoctor.ReadmeMain"
												  failonerror="yes" classpathref="${readme.class.path}">
												<!-- Input -->
												<arg value="${project.basedir}/src/main/asciidoc/README.adoc"/>
												<!-- Output -->
												<arg value="${main.basedir}/README.adoc"/>
											</java>
										</target>
									</configuration>
								</execution>
								<execution>
									<id>assert-no-unresolved-links</id>
									<phase>${generate-docs.phase}</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<fileset id="unresolved.file" dir="${basedir}/target/generated-docs/"
													 includes="**/*.html">
												<contains text="Unresolved"/>
											</fileset>
											<fail message="[Unresolved] Found...failing">
												<condition>
													<resourcecount when="greater"
																   count="0"
																   refid="unresolved.file"/>
												</condition>
											</fail>
										</target>
									</configuration>
								</execution>
								<execution>
									<id>copy-missing-html-files</id>
									<phase>${copy-missing-html-files.phase}</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<failOnError>false</failOnError>
										<target>
											<copy tofile="${project.build.directory}/generated-docs/reference/htmlsingle/index.html">
												<fileset dir="${project.build.directory}/generated-docs/reference/htmlsingle" includes="${docs.main}.html" />
											</copy>
										</target>
									</configuration>
								</execution>
								<execution>
									<id>package-and-attach-docs-zip</id>
									<phase>${package-and-attach-docs-zip.phase}</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<zip
												destfile="${project.build.directory}/${project.artifactId}-${revision}.zip">
												<!--<zipfileset
														src="${project.build.directory}/${project.artifactId}-${revision}-javadoc.jar"
														prefix="api" />-->
												<!--												<fileset dir="${project.build.directory}/contents"/>-->
												<fileset dir="${project.build.directory}/generated-docs"/>
											</zip>
										</target>
									</configuration>
								</execution>
								<execution>
									<id>setup-maven-properties</id>
									<phase>initialize</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<exportAntProperties>true</exportAntProperties>
										<target>
											<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
											<taskdef name="stringutil" classname="ise.antelope.tasks.StringUtilTask"/>
											<var name="version-type" value="${revision}"/>
											<propertyregex property="version-type" override="true"
														   input="${version-type}" regexp=".*\.(.*)" replace="\1"/>
											<propertyregex property="version-type" override="true"
														   input="${version-type}" regexp="(M)\d+" replace="MILESTONE"/>
											<propertyregex property="version-type" override="true"
														   input="${version-type}" regexp="(RC)\d+"
														   replace="MILESTONE"/>
											<propertyregex property="version-type" override="true"
														   input="${version-type}" regexp="BUILD-(.*)"
														   replace="SNAPSHOT"/>
											<stringutil string="${version-type}" property="spring-cloud-repo">
												<lowercase/>
											</stringutil>
											<propertyregex property="git.branch" override="true"
														   input="${git.branch}" regexp="origin/(.*)"
														   replace="\1"/>
											<var name="github-tag" value="${git.branch}"/>
										</target>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.jfrog.buildinfo</groupId>
							<artifactId>artifactory-maven-plugin</artifactId>
							<version>${artifactory-maven-plugin.version}</version>
							<executions>
								<execution>
									<id>build-info</id>
									<goals>
										<goal>publish</goal>
									</goals>
									<configuration>
										<deployProperties>
											<zip.deployed>true</zip.deployed>
											<zip.type>docs</zip.type>
										</deployProperties>
										<publisher>
											<contextUrl>https://repo.spring.io
											</contextUrl>
											<repoKey>libs-release-local</repoKey>
											<snapshotRepoKey>libs-snapshots-local
											</snapshotRepoKey>
										</publisher>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<artifactId>maven-deploy-plugin</artifactId>
							<version>${maven-deploy-plugin.version}</version>
							<executions>
								<execution>
									<id>default-deploy</id>
									<phase>${maven-deploy-plugin-default.phase}</phase>
									<goals>
										<goal>deploy</goal>
									</goals>
								</execution>
								<execution>
									<id>upload-docs-zip</id>
									<phase>${upload-docs-zip.phase}</phase>
									<goals>
										<goal>deploy-file</goal>
									</goals>
									<configuration>
										<generatePom>false</generatePom>
										<groupId>${project.groupId}</groupId>
										<artifactId>${project.artifactId}</artifactId>
										<version>${project.version}</version>
										<repositoryId>${maven-deploy-plugin.deployZipRepositoryId}</repositoryId>
										<url>${maven-deploy-plugin.deployZipUrl}</url>
										<file>${project.build.directory}/${project.artifactId}-${project.version}.zip</file>
										<packaging>zip;zip.type=docs;zip.deployed=false;</packaging>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<configuration>
							<attributes>
								<source-highlighter>highlight.js</source-highlighter>
							</attributes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
