<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2013-2019 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			xmlns:tool="http://www.springframework.org/schema/tool"
			xmlns="http://www.springframework.org/schema/cloud/aws/context"
			targetNamespace="http://www.springframework.org/schema/cloud/aws/context"
			elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"
				schemaLocation="https://www.springframework.org/schema/beans/spring-beans.xsd"/>
	<xsd:import namespace="http://www.springframework.org/schema/tool"
				schemaLocation="https://www.springframework.org/schema/tool/spring-tool.xsd"/>

	<xsd:element name="context-credentials">
		<xsd:annotation>
			<xsd:documentation
				source="java:org.springframework.cloud.aws.core.credentials.credentials.CredentialsProviderFactoryBean">
				<![CDATA[
	Creates the authentication configuration which will be used to authenticate the request made from this application context to the particular service.
			]]></xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports type="com.amazonaws.auth.AWSCredentialsProvider"/>
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:all>
				<xsd:element name="simple-credentials" type="simpleCredentialsType"
							 minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							Simple credentials which can be used to configure the static
							credentials. This credentials
							can be either hard-coded in the XML (not recommended),
							evaluated through an EL expression or
							replaced by a property place holder variable.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="instance-profile-credentials" minOccurs="0"
							 maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							This credentials will be fetched through the particular
							instance profile. So there is no
							need to define any additional information. NOTE: In order to
							use the instance profile
							credentials, the application context must run inside an EC2
							instance.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="profile-credentials" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							Profile based credentials provider that allows to configure
							the profiles inside an
							AWS SDK specific configuration file using different profile
							names.
						</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="profileName" use="required">
							<xsd:annotation>
								<xsd:documentation>
									Configures the profile name used by the profile
									credentials provider. The profile
									name is specified according to the profile file
									format.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="profilePath" use="optional">
							<xsd:annotation>
								<xsd:documentation>
									Allows to configure the profile path. By default the
									profile file will be read
									inside
									the users directory in the folder .aws/credentials .
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:all>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="context-resource-loader">
		<xsd:annotation>
			<xsd:documentation
				source="java:org.springframework.cloud.aws.context.config.xml.ContextResourceLoaderBeanDefinitionParser">
				Configures a resource loader that supports amazon S3 resources to be
				loaded by the application context
				resource loader.
			</xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports type="org.springframework.core.io.ResourceLoader"/>
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attributeGroup ref="locationAttributeGroup"/>
			<xsd:attribute name="task-executor" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						<![CDATA[
					Reference to an external task-executor bean used to upload file with the WritableResource interface.
									]]>
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="org.springframework.core.task.TaskExecutor"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="amazon-s3" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						<![CDATA[
					Reference to an externally configured com.amazonaws.services.s3.AmazonS3 instance used to call the
					Amazon S3 service
									]]>
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="com.amazonaws.services.s3.AmazonS3"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="context-region">
		<xsd:annotation>
			<xsd:documentation
				source="java:org.springframework.cloud.aws.context.config.xml.ContextRegionBeanDefinitionParser">
				<![CDATA[
				Configures the application context wide region provider used for all webservice access to the amazon webservices
			]]></xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports
						type="org.springframework.cloud.aws.core.region.RegionProvider"/>
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attributeGroup ref="locationAttributeGroup"/>
			<xsd:attribute name="auto-detect" type="xsd:boolean" default="false">
				<xsd:annotation>
					<xsd:documentation>Defines that the region should be auto detected
						through the EC2 meta data
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="context-instance-data">
		<xsd:annotation>
			<xsd:documentation
				source="java:org.springframework.cloud.aws.context.config.xml.ContextInstanceDataPropertySourceBeanDefinitionParser">
				<![CDATA[
				Configures a property placeholder that is capable to resolver instance data specific placeholder (like instance id)
			]]></xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports
						type="org.springframework.cloud.aws.context.config.AmazonEc2InstanceDataPropertySourcePostProcessor"/>
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attributeGroup ref="locationAttributeGroup"/>
			<xsd:attributeGroup ref="userTagsAttributeGroup"/>
			<xsd:attribute name="instance-id-provider" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Instance id provider, by default the instance id is
						taken from the instance
						meta-data. Might be changed with another strategy
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="org.springframework.cloud.aws.core.env.ec2.InstanceIdProvider"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="amazon-ec2" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Reference to a custom Amazon EC2 client bean if
						user tags should be retrieved
						from EC2 meta-data. This attribute is ignored if there is no
						user-tags-map attribute configured
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="com.amazonaws.services.ec2.AmazonEC2"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="value-separator" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Value separator used to separate the values inside
						the user data (same default
						like property place holders default)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="attribute-separator" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Attribute separator used to separate the attributes
						inside the global user data
						string
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:attributeGroup name="locationAttributeGroup">
		<xsd:annotation>
			<xsd:documentation>
				Attribute group that can be used by components which are region aware.
				This group
				allows users to configure the particular region.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="region" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The region that will be used, must be one of the valid
					regions.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="region-provider" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type
							type="org.springframework.cloud.aws.core.region.RegionProvider"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>

	<xsd:attributeGroup name="userTagsAttributeGroup">
		<xsd:attribute name="user-tags-map" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Exposed map that contains all user tags to be accessed
					via EL expression
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>

	<xsd:complexType name="simpleCredentialsType">
		<xsd:attribute name="access-key" use="required">
			<xsd:annotation>
				<xsd:documentation>
					The access key used to make the request. An access key is assigned to
					one account or IAM user.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="secret-key" use="required">
			<xsd:annotation>
				<xsd:documentation>
					The secret key which is assigned for the particular access key.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:element name="stack-configuration">
		<xsd:annotation>
			<xsd:documentation
				source="org.springframework.cloud.aws.context.config.xml.StackConfigurationBeanDefinitionParser">
				Configures an Amazon Cloud Formation stack and enables lookup of physical
				ids by logical ids for
				resources defined in the specified stack.
			</xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports
						type="org.springframework.cloud.aws.core.env.stack.StackResourceRegistry"/>
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attributeGroup ref="locationAttributeGroup"/>
			<xsd:attributeGroup ref="userTagsAttributeGroup"/>
			<xsd:attribute name="stack-name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The name of the stack to be configured. The corresponding stack
						must exist and must be
						available. If no stack name is configured, the stack name is
						automatically detected
						based on the stack the current Amazon EC2 instance is part of.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="amazon-cloud-formation" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						A reference to an externally configured AmazonCloudFormation
						client, to be used to retrieve
						stack information from the CloudFormation service.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="com.amazonaws.services.cloudformation.AmazonCloudFormation"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
